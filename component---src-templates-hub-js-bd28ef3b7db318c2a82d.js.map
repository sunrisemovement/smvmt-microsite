{"version":3,"sources":["webpack:///./src/components/Newsletter.module.css","webpack:///./src/components/Hero.js","webpack:///./src/components/Section.js","webpack:///./src/components/About.js","webpack:///./src/components/Documents.js","webpack:///./src/components/Events.js","webpack:///./src/components/Newsletter.js","webpack:///./src/templates/hub.js"],"names":["module","exports","Section","styled","section","BackgroundImage","Image","Content","div","props","dense","LogoContainer","LogoImage","Headline","h1","WebsiteLink","Hero","background","logo","name","website","websiteText","style","position","imgStyle","objectFit","Button","href","label","Container","Heading","h2","id","title","children","Body","Paragraph","p","About","s","hubName","content","includes","dangerouslySetInnerHTML","__html","split","filter","entry","map","index","key","Grid","DownloadLink","a","icon","width","height","viewBox","x","y","rx","strokeWidth","fill","stroke","Documents","documents","document","target","publicURL","Layout","Entry","article","Title","h3","StartDate","time","Location","InfoLink","events","event","dateTime","input","start","date","Date","getFullYear","getMonth","toString","padStart","getDate","Intl","DateTimeFormat","month","day","year","format","formatDateForDisplay","location","infoLink","rel","actionNetworkCache","Map","LinkContainer","ActionNetwork","actionId","type","container","React","onInput","value","parentElement","classList","remove","add","contains","onBlur","current","inner","cacheKey","has","get","appendChild","createElement","innerHTML","script","src","styles","addEventListener","removeEventListener","set","removeChild","className","Styles","ref","link","url","nonLinkTextRemoved","w","startsWith","URL","actionNetwork","hostname","pathname","substring","length","MainContent","pageQuery","HubTemplate","data","hasContent","useMemo","hub","nodes","Boolean","signup","about","donations","socialMediaMap","twitter","facebook","instagram","email","hero","childImageSharp","defaultHero","defaultLogo","Events","Newsletter"],"mappings":"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","file":"component---src-templates-hub-js-bd28ef3b7db318c2a82d.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Newsletter-module--container--3Eb3H\"};","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport styled from \"styled-components\"\nimport Button from \"./Button\"\n\nconst Section = styled.section`\n  position: relative;\n  overflow: hidden;\n`\n\nconst BackgroundImage = styled(Image)`\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center;\n  z-index: 1;\n`\n\n/** @param {{ dense?: boolean }} props */\nconst contentPadding = props =>\n  props.dense ? \"60px 32px 108px\" : \"190px 32px 354px\"\n\nconst Content = styled.div`\n  position: relative;\n  z-index: 2;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: ${contentPadding};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n`\n\nconst LogoContainer = styled.div`\n  width: 82px;\n  height: 82px;\n  background-color: var(--sunrise-grey);\n  border-radius: 50%;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 16px;\n`\n\nconst LogoImage = styled(Image)`\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n`\n\nconst Headline = styled.h1`\n  font-style: normal;\n  font-weight: bold;\n  font-size: 48px;\n  line-height: 60px;\n  text-transform: uppercase;\n  color: var(--sunrise-yellow);\n  margin: 0;\n  text-align: center;\n`\n\nconst WebsiteLink = styled.div`\n  padding: 0 40px;\n  margin-top: 32px;\n`\n\n/**\n * @typedef {Object} HeroProps\n * @property {boolean} dense\n * @property {import(\"gatsby-image\").GatsbyImageProps} background\n * @property {import(\"gatsby-image\").GatsbyImageProps} logo\n * @property {string} name\n * @property {string | null} website\n * @property {string | null} websiteText\n *\n * @param {HeroProps} props\n */\nconst Hero = ({ dense, background, logo, name, website, websiteText }) => {\n  return (\n    <Section>\n      <BackgroundImage {...background} style={{ position: \"absolute\" }} />\n      <Content dense={dense}>\n        <LogoContainer>\n          <LogoImage {...logo} imgStyle={{ objectFit: \"contain\" }} />\n        </LogoContainer>\n        <Headline>Sunrise Movement {name}</Headline>\n        {website && (\n          <WebsiteLink>\n            <Button\n              href={website}\n              label={\n                websiteText\n                  ? websiteText\n                  : `Visit Sunrise ${name}’s full website`\n              }\n            />\n          </WebsiteLink>\n        )}\n      </Content>\n    </Section>\n  )\n}\n\nexport default Hero\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst Container = styled.section`\n  position: relative;\n  overflow: hidden;\n`\n\nconst Heading = styled.h2`\n  font-style: normal;\n  font-weight: bold;\n  font-size: 16px;\n  line-height: 1.25;\n  letter-spacing: 0.14em;\n  text-transform: uppercase;\n  color: var(--sunrise-grey);\n  padding-bottom: 20px;\n  margin: 0;\n`\n\n/**\n * @typedef {Object} SectionProps\n * @property {string} id\n * @property {string} title\n * @property {React.ReactNode} children\n *\n * @param {SectionProps} props\n */\nconst Section = ({ id, title, children }) => {\n  return (\n    <Container>\n      <Heading id={id}>{title}</Heading>\n      <div>{children}</div>\n    </Container>\n  )\n}\n\nexport default Section\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport Section from \"./Section\"\n\nconst containsHtmlTags = (s) => {\n  return s.includes(\"<\") && s.includes(\">\");\n}\n\nconst Body = styled.div`\n  font-family: var(--sunrise-font-serif);\n  font-style: normal;\n  font-weight: normal;\n  font-size: 18px;\n  line-height: 1.5;\n  color: #000;\n`\n\nconst Paragraph = styled.p`\n  &:last-child {\n    margin-bottom: 0;\n  }\n`\n\n/**\n * @typedef {Object} AboutProps\n * @property {string} content\n * @property {string} hubName\n *\n * @param {AboutProps} props\n */\nconst About = ({ hubName, content }) => {\n  if (containsHtmlTags(content)) {\n    return (\n      <Section id=\"about\" title={`About Sunrise ${hubName}`}>\n        <Body dangerouslySetInnerHTML={{__html: content}}>\n        </Body>\n      </Section>\n    )\n  } else {\n    return (\n      <Section id=\"about\" title={`About Sunrise ${hubName}`}>\n        <Body>\n          {content\n            .split(/\\n\\n+/)\n            .filter(entry => entry)\n            .map((entry, index) => (\n              <Paragraph key={index}>{entry}</Paragraph>\n            ))}\n        </Body>\n      </Section>\n    )\n  }\n}\n\nAbout.propTypes = {\n  content: PropTypes.string.isRequired,\n  hubName: PropTypes.string.isRequired,\n}\n\nexport default About\n","import React from \"react\"\nimport Section from \"./Section\"\nimport styled from \"styled-components\"\n\nconst Grid = styled.div`\n  display: grid;\n  grid-column-gap: 20px;\n  grid-row-gap: 20px;\n  grid-template-columns: 1fr 1fr;\n  grid-auto-flow: dense;\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`\n\nconst DownloadLink = styled.a`\n  display: flex;\n  padding: 20px;\n  align-items: center;\n  justify-content: space-between;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 12px;\n  line-height: 15px;\n  letter-spacing: 0.14em;\n  text-transform: uppercase;\n  color: var(--sunrise-grey);\n  fill: currentColor;\n  stroke: currentColor;\n  background-color: var(--sunrise-tan);\n  text-decoration: none;\n`\n\n/**\n * @type {React.ReactNode}\n */\nconst icon = (\n  <svg width=\"13\" height=\"17\" viewBox=\"0 0 13 17\">\n    <rect\n      x=\"0.619048\"\n      y=\"1.38077\"\n      width=\"11.7619\"\n      height=\"14.2381\"\n      rx=\"1.85714\"\n      strokeWidth=\"1.2381\"\n      fill=\"none\"\n    />\n    <rect\n      x=\"2.4762\"\n      y=\"4.47614\"\n      width=\"8.04762\"\n      height=\"1.2381\"\n      stroke=\"none\"\n    />\n    <rect\n      x=\"2.4762\"\n      y=\"7.57135\"\n      width=\"8.04762\"\n      height=\"1.2381\"\n      stroke=\"none\"\n    />\n    <rect\n      x=\"2.4762\"\n      y=\"10.6666\"\n      width=\"5.57143\"\n      height=\"1.2381\"\n      stroke=\"none\"\n    />\n  </svg>\n)\n\n/**\n * @typedef {Object} Document\n * @property {string} id\n * @property {string} publicURL\n * @property {string} name\n *\n * @typedef {Object} DocumentsProps\n * @property {Array<Document>} documents\n *\n * @param {DocumentsProps} props\n */\nconst Documents = ({ documents }) => {\n  return (\n    <Section id=\"documents\" title=\"Documents\">\n      <Grid>\n        {documents.map(document => (\n          <DownloadLink\n            target=\"_blank\"\n            key={document.publicURL}\n            href={document.publicURL}>\n            <span>{document.name}</span>\n            {icon}\n          </DownloadLink>\n        ))}\n      </Grid>\n    </Section>\n  )\n}\n\nexport default Documents\n","import React from \"react\"\nimport Section from \"./Section\"\nimport styled from \"styled-components\"\n\nconst Layout = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-auto-flow: dense;\n  grid-row-gap: 20px;\n  grid-column-gap: 20px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`\n\nconst Entry = styled.article`\n  background-color: var(--sunrise-tan);\n  color: var(--sunrise-gray);\n  padding: 30px;\n  display: grid;\n  grid-template-rows: auto auto auto 1fr auto;\n  grid-auto-flow: row;\n  justify-items: start;\n`\n\nconst Title = styled.h3`\n  font-weight: bold;\n  font-size: 24px;\n  line-height: 28px;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  margin-bottom: 5px;\n`\n\nconst StartDate = styled.time`\n  font-weight: bold;\n  font-size: 16px;\n  line-height: 20px;\n  letter-spacing: 0.08em;\n  text-transform: uppercase;\n`\n\nconst Location = styled.p`\n  font-weight: bold;\n  font-size: 16px;\n  line-height: 20px;\n  letter-spacing: 0.08em;\n  text-transform: uppercase;\n  margin: 0;\n`\n\nconst InfoLink = styled.a`\n  background: var(--sunrise-yellow);\n  border-radius: 64px;\n  display: inline-block;\n  margin-top: 48px;\n  color: var(--sunrise-gray);\n  font-weight: bold;\n  font-size: 12px;\n  line-height: 15px;\n  padding: 10px 28px;\n  letter-spacing: 0.14em;\n  text-transform: uppercase;\n  white-space: nowrap;\n  grid-row: 5;\n  text-decoration: none;\n`\n\nconst formatDateForDisplay = input => {\n  const date = new Date(input)\n  const formatter = new Intl.DateTimeFormat(\"en-us\", {\n    month: \"long\",\n    day: \"numeric\",\n    year: \"numeric\",\n  })\n  return formatter.format(date)\n}\n\nconst formatDateForSemantics = input => {\n  const date = new Date(input)\n  return `${date.getFullYear()}-${(date.getMonth() + 1)\n    .toString()\n    .padStart(2, \"0\")}-${date.getDate()}`\n}\n\n/**\n * @typedef {Object} EventData\n * @property {string} id\n * @property {string | null} location\n * @property {string} title\n * @property {string} start\n * @property {string | null} infoLink\n *\n * @typedef {Object} EventsProps\n * @property {Array<EventData>} events\n *\n * @param {EventsProps} props\n */\nexport default ({ events }) => {\n  return (\n    <Section id=\"events\" title=\"Upcoming Events\">\n      <Layout>\n        {events.map(event => (\n          <Entry key={event.id}>\n            <Title>{event.title}</Title>\n            <StartDate dateTime={formatDateForSemantics(event.start)}>\n              {formatDateForDisplay(event.start)}\n            </StartDate>\n            {event.location && <Location>{event.location}</Location>}\n            {event.infoLink && (\n              <InfoLink target=\"_blank\" href={event.infoLink} rel=\"bookmark\">\n                More info\n              </InfoLink>\n            )}\n          </Entry>\n        ))}\n      </Layout>\n    </Section>\n  )\n}\n","import * as React from \"react\"\nimport styled from \"styled-components\"\nimport Styles from \"./Newsletter.module.css\"\nimport Section from \"../components/Section\"\nimport Button from \"../components/Button\"\n\nconst actionNetworkCache = new Map()\n\nconst LinkContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n`\n\nconst ActionNetwork = ({ actionId, type }) => {\n  const container = React.useRef()\n\n  const onInput = React.useCallback(event => {\n    const target = event.target\n    target.value === \"\"\n      ? target.parentElement.classList.remove(\"has-value\")\n      : target.parentElement.classList.add(\"has-value\")\n    target.classList.contains(\"error_input\")\n      ? target.parentElement.classList.add(\"has-error\")\n      : target.parentElement.classList.remove(\"has-error\")\n  }, [])\n\n  const onBlur = React.useCallback(event => {\n    const target = event.target\n    target.classList.contains(\"error_input\")\n      ? target.parentElement.classList.add(\"has-error\")\n      : target.parentElement.classList.remove(\"has-error\")\n  }, [])\n\n  React.useEffect(() => {\n    if (!container.current) return\n    let inner\n    const cacheKey = `${type}-${actionId}`\n    if (actionNetworkCache.has(actionId)) {\n      inner = actionNetworkCache.get(cacheKey)\n      container.current.appendChild(inner)\n    } else {\n      inner = document.createElement(\"div\")\n      inner.innerHTML = `\n        <div id=\"can-${type}-area-${actionId}\" style=\"width: 100%;\"></div>\n      `\n      const script = document.createElement(\"script\")\n      script.src = `https://actionnetwork.org/widgets/v3/${type}/${actionId}?format=js&source=widget`\n      inner.appendChild(script)\n      const styles = document.createElement(\"link\")\n      styles.href =\n        \"https://actionnetwork.org/css/style-embed-whitelabel-v3.css\"\n      styles.rel = \"stylesheet\"\n      inner.appendChild(styles)\n      container.current.appendChild(inner)\n    }\n    inner.addEventListener(\"input\", onInput)\n    inner.addEventListener(\"focusout\", onBlur)\n    return () => {\n      inner.removeEventListener(\"input\", onInput)\n      inner.removeEventListener(\"focusout\", onBlur)\n      actionNetworkCache.set(cacheKey, inner)\n      container.current && container.current.removeChild(inner)\n    }\n  }, [actionId, type])\n\n  return <div className={Styles.container} ref={container} />\n}\n\n/**\n * @param {{ link: string }} props\n */\nexport default ({ link }) => {\n  const url = React.useMemo(() => {\n    const nonLinkTextRemoved =\n      link.split(\" \").filter(w => w.startsWith(\"http\"))[0] ?? null\n    if (!nonLinkTextRemoved) return null\n    try {\n      return new URL(nonLinkTextRemoved)\n    } catch {\n      return null\n    }\n  }, [link])\n\n  const actionNetwork = React.useMemo(() => {\n    if (!url) return null\n    if (url.hostname !== \"actionnetwork.org\") return null\n    const [type, actionId] = url.pathname.split(\"/\").filter(x => x)\n    if ((type !== \"forms\" && type !== \"events\") || !actionId) return null\n    return { actionId, type: type.substring(0, type.length - 1) }\n  }, [url])\n\n  if (actionNetwork) {\n    return (\n      <Section id=\"newsletter\" title=\"Newsletter Sign Up\">\n        <ActionNetwork\n          actionId={actionNetwork.actionId}\n          type={actionNetwork.type}\n        />\n      </Section>\n    )\n  }\n\n  if (url) {\n    return (\n      <Section id=\"newsletter\" title=\"Newsletter Sign Up\">\n        <LinkContainer>\n          <Button label=\"Sign up here\" href={url.href} />\n        </LinkContainer>\n      </Section>\n    )\n  }\n\n  return null\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport Layout from \"../components/layout\"\nimport Hero from \"../components/Hero\"\nimport About from \"../components/About\"\nimport Documents from \"../components/Documents\"\nimport Events from \"../components/Events\"\nimport Newsletter from \"../components/Newsletter\"\nimport { graphql } from \"gatsby\"\n\nconst MainContent = styled.div`\n  max-width: 756px;\n  padding: 80px 16px;\n  margin: 0 auto;\n  display: grid;\n  grid-auto-flow: row;\n  grid-row-gap: 80px;\n`\n\n/**\n * @typedef {Object} HubTemplateProps\n * @property {PageQuery} data\n *\n * @param {HubTemplateProps} props\n */\nconst HubTemplate = ({ data }) => {\n  const hasContent = React.useMemo(() => {\n    return (\n      data.hub.documents.length !== 0 ||\n      data.events.nodes.length !== 0 ||\n      Boolean(data.hub.signup) ||\n      Boolean(data.hub.about)\n    )\n  }, [data])\n\n  return (\n    <Layout\n      hubName={data.hub.name}\n      donations={data.hub.donations}\n      socialMediaMap={\n        new Map([\n          [\"twitter\", data.hub.twitter],\n          [\"facebook\", data.hub.facebook],\n          [\"instagram\", data.hub.instagram],\n          [\"email\", data.hub.email ? `mailto:${data.hub.email}` : null],\n        ])\n      }>\n      <Hero\n        dense={hasContent}\n        name={data.hub.name}\n        website={data.hub.website}\n        websiteText={data.hub.websiteText}\n        background={\n          data.hub.hero?.childImageSharp ?? data.defaultHero.childImageSharp\n        }\n        logo={\n          data.hub.logo?.childImageSharp ?? data.defaultLogo.childImageSharp\n        }\n      />\n      {hasContent && (\n        <MainContent>\n          {data.hub.about && (\n            <About hubName={data.hub.name} content={data.hub.about} />\n          )}\n          {data.events.nodes.length !== 0 && (\n            <Events events={data.events.nodes} />\n          )}\n          {data.hub.documents.length !== 0 && (\n            <Documents documents={data.hub.documents} />\n          )}\n          {data.hub.signup && <Newsletter link={data.hub.signup} />}\n        </MainContent>\n      )}\n    </Layout>\n  )\n}\n\nexport default HubTemplate\n\n/**\n * @typedef {Object} DocumentQuery\n * @property {string} id\n * @property {string} name\n * @property {string} publicURL\n *\n * @typedef {Object} HubQuery\n * @property {string} name\n * @property {string} about\n * @property {string | null} email\n * @property {string | null} hub.signup\n * @property {string | null} facebook\n * @property {string | null} instagram\n * @property {string | null} twitter\n * @property {string | null} website\n * @property {string | null} donations\n * @property {string | null} websiteText\n * @property {Object} logo\n * @property {import(\"gatsby-image\").GatsbyImageProps} logo.childImageSharp\n * @property {Object} hero\n * @property {import(\"gatsby-image\").GatsbyImageProps} hero.childImageSharp\n * @property {Array<DocumentQuery>} documents\n *\n * @typedef {Object} EventQuery\n * @property {string} id\n * @property {string | null} location\n * @property {string} title\n * @property {string} start\n * @property {string | null} infoLink\n *\n * @typedef {Object} PageQuery\n * @property {HubQuery} hub\n * @property {Object} events\n * @property {Array<EventQuery>} events.nodes\n * @property {Object} defaultLogo\n * @property {import(\"gatsby-image\").GatsbyImageProps} defaultLogo.childImageSharp\n * @property {Object} defaultHero\n * @property {import(\"gatsby-image\").GatsbyImageProps} defaultHero.childImageSharp\n */\n\nexport const pageQuery = graphql`\n  query IndexPage($id: String!) {\n    defaultLogo: file(\n      sourceInstanceName: { eq: \"images\" }\n      relativePath: { eq: \"sunrise-logo-padded.png\" }\n    ) {\n      childImageSharp {\n        fluid(maxWidth: 150) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    defaultHero: file(\n      sourceInstanceName: { eq: \"images\" }\n      relativePath: { eq: \"default-hero.jpg\" }\n    ) {\n      childImageSharp {\n        fluid(maxWidth: 1440) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    events: allEvent(filter: { hub: { id: { eq: $id } } }) {\n      nodes {\n        id\n        location\n        title\n        start\n        infoLink\n      }\n    }\n    hub(id: { eq: $id }) {\n      name\n      about\n      email\n      website\n      twitter\n      facebook\n      instagram\n      signup\n      donations\n      websiteText\n      logo {\n        childImageSharp {\n          fluid(maxWidth: 150) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      hero {\n        childImageSharp {\n          fluid(maxWidth: 1440) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      documents {\n        id\n        name\n        publicURL\n      }\n    }\n  }\n`\n"],"sourceRoot":""}